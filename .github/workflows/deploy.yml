# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Deploy Express App

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v3                     # Клонирует репозиторий
    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: 18                            # Устанавливает Node.js 18
    - name: Install dependencies
      run: npm ci                                  # Чистая установка зависимостей
    - name: Copy app to server
      uses: appleboy/scp-action@v0.1.7             # Копирует проект на сервер по SSH
      with:
        host: ${{ secrets.SERVER_HOST }}           # IP или домен сервера (из GitHub Secrets)
        username: ${{ secrets.SERVER_USER }}       # Пользователь сервера
        key: ${{ secrets.SERVER_SSH_KEY }}          # Приватный SSH ключ из Secrets
        port: 22
        source: "."                                # Отправляет весь репозиторий
        target: "/home/${{ secrets.SERVER_USER }}/express-app"  # Путь на сервере
        rm: true                                  # Удаляет целевую папку перед копированием
    - name: Restart app on server
      uses: appleboy/ssh-action@v0.1.7             # Подключается по SSH и перезапускает приложение
      # Проверить, что файлы скопировались
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: 22
        script: |
          ls -la /${{ secrets.SERVER_USER }}/express-app
    - name: Restart app on server
      uses: appleboy/ssh-action@v0.1.7
      with:
        host: ${{ secrets.SERVER_HOST }}
        username: ${{ secrets.SERVER_USER }}
        key: ${{ secrets.SERVER_SSH_KEY }}
        port: 22
        script: |
          cd /${{ secrets.SERVER_USER }}/express-app
          npm install
          pm2 reload my-express-app || pm2 start /${{ secrets.SERVER_USER }}/rabbit_quest/app.js --name my-express-app

